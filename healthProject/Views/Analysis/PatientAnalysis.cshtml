@{
    ViewData["Title"] = "我的健康分析";
    Layout = null;
}

<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: linear-gradient(135deg, #E8F5E9 0%, #C8E6C9 100%);
            min-height: 100vh;
            font-family: 'Microsoft JhengHei', 'Segoe UI', Arial, sans-serif;
            padding: 2rem 1rem;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 25px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #66BB6A 0%, #4CAF50 100%);
            color: white;
            padding: 2rem;
            text-align: center;
        }

        .header-title {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .header-subtitle {
            font-size: 1.1rem;
            opacity: 0.95;
        }

        .content {
            padding: 2rem;
        }

        .button-group {
            margin-bottom: 2rem;
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            transition: all 0.3s ease;
        }

        .btn-secondary {
            background: linear-gradient(135deg, #78909C 0%, #607D8B 100%);
            color: white;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .selection-section {
            background: linear-gradient(135deg, #F1F8E9 0%, #DCEDC8 100%);
            border: 3px solid #66BB6A;
            padding: 2rem;
            border-radius: 15px;
            margin-bottom: 2rem;
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: #2E7D32;
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .report-types {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .report-type-card {
            background: white;
            border: 3px solid #C8E6C9;
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .report-type-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
            border-color: #66BB6A;
        }

        .report-type-card.active {
            background: linear-gradient(135deg, #66BB6A 0%, #4CAF50 100%);
            color: white;
            border-color: #4CAF50;
        }

        .report-type-icon {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
        }

        .report-type-name {
            font-size: 1.2rem;
            font-weight: 600;
        }

        .date-selection {
            background: white;
            border: 2px solid #C8E6C9;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .date-input-group {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .date-input-group label {
            font-weight: 600;
            color: #2E7D32;
            min-width: 100px;
        }

        .date-input {
            flex: 1;
            padding: 0.75rem;
            border: 2px solid #66BB6A;
            border-radius: 10px;
            font-size: 1rem;
            min-width: 180px;
        }

        .date-hint {
            color: #558B2F;
            font-weight: 500;
            font-size: 0.9rem;
        }

        .btn-primary {
            background: linear-gradient(135deg, #66BB6A 0%, #4CAF50 100%);
            color: white;
            padding: 1rem 3rem;
            font-size: 1.1rem;
        }

        .btn-success {
            background: linear-gradient(135deg, #42A5F5 0%, #1E88E5 100%);
            color: white;
        }

        .loading {
            display: none;
            text-align: center;
            padding: 3rem;
        }

        .spinner {
            border: 4px solid #C8E6C9;
            border-top: 4px solid #66BB6A;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 0 auto 1rem;
        }

        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .report-content {
            display: none;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: linear-gradient(135deg, #F1F8E9 0%, #DCEDC8 100%);
            border: 2px solid #66BB6A;
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
        }

        .stat-label {
            font-size: 0.9rem;
            color: #558B2F;
            margin-bottom: 0.5rem;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: #2E7D32;
        }

        .stat-detail {
            font-size: 0.85rem;
            color: #558B2F;
            margin-top: 0.5rem;
        }

        .chart-section {
            background: white;
            border: 2px solid #C8E6C9;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .chart-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #2E7D32;
            margin-bottom: 1rem;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
        }

        th {
            background: linear-gradient(135deg, #66BB6A 0%, #4CAF50 100%);
            color: white;
            padding: 0.75rem;
            text-align: left;
            font-weight: 700;
        }

        td {
            padding: 0.75rem;
            border-bottom: 1px solid #C8E6C9;
        }

        tr:hover {
            background: #F1F8E9;
        }

        .badge {
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
        }

        .badge-success {
            background: #C8E6C9;
            color: #2E7D32;
        }

        .badge-danger {
            background: #FFCDD2;
            color: #C62828;
        }

        .badge-warning {
            background: #FFE0B2;
            color: #E65100;
        }

        @@media (max-width: 768px) {
            .report-types {
                grid-template-columns: 1fr;
            }

            .date-input-group {
                flex-direction: column;
                align-items: stretch;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="header-title">📈 我的健康分析</h1>
            <p class="header-subtitle">查看健康趨勢與統計報表</p>
        </div>

        <div class="content">
            <div class="button-group">
                <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                    ← 返回主選單
                </a>
            </div>

            <!-- 報表類型選擇 -->
            <div class="selection-section">
                <h2 class="section-title">📊 選擇報表類型</h2>

                <div class="report-types">
                    <div class="report-type-card" data-type="0" onclick="selectReportType(0)">
                        <div class="report-type-icon">📅</div>
                        <div class="report-type-name">每日報表</div>
                    </div>
                    <div class="report-type-card active" data-type="1" onclick="selectReportType(1)">
                        <div class="report-type-icon">📆</div>
                        <div class="report-type-name">每週報表</div>
                    </div>
                    <div class="report-type-card" data-type="2" onclick="selectReportType(2)">
                        <div class="report-type-icon">📋</div>
                        <div class="report-type-name">每月報表</div>
                    </div>
                    <div class="report-type-card" data-type="3" onclick="selectReportType(3)">
                        <div class="report-type-icon">📑</div>
                        <div class="report-type-name">每年報表</div>
                    </div>
                </div>

                <!-- 日期選擇 -->
                <div class="date-selection">
                    <!-- 每日 -->
                    <div id="dailyDateSelection" style="display:none;">
                        <div class="date-input-group">
                            <label>選擇日期:</label>
                            <input type="date" id="dailyDate" class="date-input" />
                            <span class="date-hint">選擇單一日期</span>
                        </div>
                    </div>

                    <!-- 每週 -->
                    <div id="weeklyDateSelection">
                        <div class="date-input-group">
                            <label>週開始日期:</label>
                            <input type="date" id="weeklyStartDate" class="date-input" />
                            <span class="date-hint">系統將自動計算至該週結束日期 (+6天)</span>
                        </div>
                    </div>

                    <!-- 每月 -->
                    <div id="monthlyDateSelection" style="display:none;">
                        <div class="date-input-group">
                            <label>選擇年月:</label>
                            <input type="month" id="monthlyDate" class="date-input" />
                            <span class="date-hint">選擇年份和月份</span>
                        </div>
                    </div>

                    <!-- 每年 -->
                    <div id="yearlyDateSelection" style="display:none;">
                        <div class="date-input-group">
                            <label>選擇年份:</label>
                            <select id="yearlyDate" class="date-input"></select>
                            <span class="date-hint">選擇完整年份</span>
                        </div>
                    </div>
                </div>

                <div style="text-align: center;">
                    <button class="btn btn-primary" onclick="loadReport()">
                        🔍 查詢報表
                    </button>
                    <button class="btn btn-success" onclick="downloadPdf()" id="downloadBtn" style="display:none;">
                        📥 下載 PDF
                    </button>
                </div>
            </div>

            <!-- 載入中 -->
            <div id="loadingDiv" class="loading">
                <div class="spinner"></div>
                <p style="color: #66BB6A; font-size: 1.2rem; font-weight: 600;">正在產生報表...</p>
            </div>

            <!-- 報表內容 -->
            <div id="reportContent" class="report-content">
                <!-- 🆕 每日報表 - 表格顯示 -->
                <div id="dailyTable" style="display:none;">
                    <div class="chart-section">
                        <h3 class="chart-title">📊 當日健康數據</h3>
                        <table style="width: 100%; border-collapse: collapse;">
                            <thead>
                                <tr style="background: #f3f4f6;">
                                    <th style="padding: 1rem; text-align: left; border: 1px solid #e5e7eb; font-weight: 600;">項目</th>
                                    <th style="padding: 1rem; text-align: center; border: 1px solid #e5e7eb; font-weight: 600;">測量值</th>
                                    <th style="padding: 1rem; text-align: center; border: 1px solid #e5e7eb; font-weight: 600;">標準值</th>
                                    <th style="padding: 1rem; text-align: center; border: 1px solid #e5e7eb; font-weight: 600;">狀態</th>
                                </tr>
                            </thead>
                            <tbody id="dailyTableBody">
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- 統計摘要 (週/月/年報表用) -->
                <div id="summarySection" class="chart-section">
                    <h3 class="chart-title">📊 統計摘要</h3>
                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-label">總天數</div>
                            <div class="stat-value" id="totalDays">0</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-label">血壓異常</div>
                            <div class="stat-value" id="highBPDays" style="color: #C62828;">0</div>
                            <div class="stat-detail" id="highBPPercentage"></div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-label">血糖異常</div>
                            <div class="stat-value" id="highBSDays" style="color: #C62828;">0</div>
                            <div class="stat-detail" id="highBSPercentage"></div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-label">飲水不足</div>
                            <div class="stat-value" id="lowWaterDays" style="color: #EF6C00;">0</div>
                            <div class="stat-detail" id="lowWaterPercentage"></div>
                        </div>
                    </div>

                    <table>
                        <thead>
                            <tr>
                                <th>項目</th>
                                <th>平均值</th>
                                <th>標準值</th>
                                <th>狀態</th>
                            </tr>
                        </thead>
                        <tbody id="avgTable"></tbody>
                    </table>
                </div>

                <!-- 圖表區域 (週/月/年報表用) -->
                <div id="chartsSection">
                    <div class="chart-section">
                        <h3 class="chart-title">📈 血壓趨勢</h3>
                        <canvas id="bpChart" style="max-height: 300px;"></canvas>
                    </div>

                    <div class="chart-section">
                        <h3 class="chart-title">🩸 血糖趨勢</h3>
                        <canvas id="bsChart" style="max-height: 300px;"></canvas>
                    </div>

                    <div class="chart-section">
                        <h3 class="chart-title">💧 飲水量趨勢</h3>
                        <canvas id="waterChart" style="max-height: 300px;"></canvas>
                    </div>

                    <div class="chart-section">
                        <h3 class="chart-title">🏃 運動時間趨勢</h3>
                        <canvas id="exerciseChart" style="max-height: 300px;"></canvas>
                    </div>

                    <!-- 飲料 & 三餐記錄 -->
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(400px, 1fr)); gap: 1.5rem;">
                        <div class="chart-section">
                            <h3 class="chart-title">🥤 飲料記錄</h3>
                            <div id="beverageTable"></div>
                        </div>

                        <div class="chart-section">
                            <h3 class="chart-title">🍽️ 三餐記錄</h3>
                            <div id="mealTable"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let currentReportType = 1; // 預設每週報表
        let currentReport = null;
        let charts = {};

        // 初始化
        document.addEventListener('DOMContentLoaded', function () {
            console.log('✅ 頁面載入完成');
            initializeYearSelect();
            setDefaultDates();
        });

        // 初始化年份選擇器
        function initializeYearSelect() {
            const yearSelect = document.getElementById('yearlyDate');
            const currentYear = new Date().getFullYear();
            for (let year = currentYear; year >= currentYear - 10; year--) {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year + ' 年';
                yearSelect.appendChild(option);
            }
        }

        // 設定預設日期
        function setDefaultDates() {
            const today = new Date();

            // 每日
            document.getElementById('dailyDate').valueAsDate = today;

            // 每週 (上週一到週日)
            const lastMonday = new Date(today);
            lastMonday.setDate(today.getDate() - today.getDay() - 6);
            document.getElementById('weeklyStartDate').valueAsDate = lastMonday;

            // 每月
            document.getElementById('monthlyDate').value = today.toISOString().substr(0, 7);
        }

        // 選擇報表類型
        function selectReportType(type) {
            console.log('選擇報表類型:', type);
            currentReportType = type;

            // 更新卡片樣式
            document.querySelectorAll('.report-type-card').forEach(card => {
                card.classList.remove('active');
            });
            document.querySelector(`.report-type-card[data-type="${type}"]`).classList.add('active');

            // 顯示對應的日期選擇器
            document.getElementById('dailyDateSelection').style.display = type === 0 ? 'block' : 'none';
            document.getElementById('weeklyDateSelection').style.display = type === 1 ? 'block' : 'none';
            document.getElementById('monthlyDateSelection').style.display = type === 2 ? 'block' : 'none';
            document.getElementById('yearlyDateSelection').style.display = type === 3 ? 'block' : 'none';

            // 隱藏報表
            document.getElementById('reportContent').style.display = 'none';
            document.getElementById('downloadBtn').style.display = 'none';
        }

        // 查詢報表
        async function loadReport() {
            console.log('🔍 開始查詢報表, 類型:', currentReportType);
            
            let startDate, endDate;

            // 根據報表類型計算日期
            switch (currentReportType) {
                case 0: // 每日
                    const daily = document.getElementById('dailyDate').value;
                    if (!daily) {
                        alert('請選擇日期');
                        return;
                    }
                    startDate = daily;
                    endDate = daily;
                    break;

                case 1: // 每週
                    const weekStart = document.getElementById('weeklyStartDate').value;
                    if (!weekStart) {
                        alert('請選擇週開始日期');
                        return;
                    }
                    startDate = weekStart;
                    const weekEnd = new Date(weekStart);
                    weekEnd.setDate(weekEnd.getDate() + 6);
                    endDate = weekEnd.toISOString().substr(0, 10);
                    break;

                case 2: // 每月
                    const monthly = document.getElementById('monthlyDate').value;
                    if (!monthly) {
                        alert('請選擇年月');
                        return;
                    }
                    const [year, month] = monthly.split('-');
                    startDate = `${year}-${month}-01`;
                    const lastDay = new Date(year, month, 0).getDate();
                    endDate = `${year}-${month}-${String(lastDay).padStart(2, '0')}`;
                    break;

                case 3: // 每年
                    const yearVal = document.getElementById('yearlyDate').value;
                    startDate = `${yearVal}-01-01`;
                    endDate = `${yearVal}-12-31`;
                    break;
            }

            console.log('📅 日期範圍:', startDate, '到', endDate);

            document.getElementById('loadingDiv').style.display = 'block';
            document.getElementById('reportContent').style.display = 'none';
            document.getElementById('downloadBtn').style.display = 'none';

            try {
                const response = await fetch('/Analysis/GetPatientReport', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        reportType: currentReportType,
                        startDate,
                        endDate
                    })
                });

                const result = await response.json();
                console.log('📊 API 回應:', result);

                if (result.success) {
                    currentReport = result.data;
                    displayReport(result.data);
                    document.getElementById('downloadBtn').style.display = 'inline-block';
                } else {
                    alert(result.message || '查詢失敗');
                }
            } catch (error) {
                console.error('❌ 查詢錯誤:', error);
                alert('系統錯誤,請稍後再試');
            } finally {
                document.getElementById('loadingDiv').style.display = 'none';
            }
        }

        // 顯示報表
        function displayReport(data) {
            console.log('📈 顯示報表數據:', data);
            document.getElementById('reportContent').style.display = 'block';

            // 🆕 如果是每日報表,顯示表格;否則顯示圖表
            if (currentReportType === 0) {
                // 每日報表 - 顯示表格
                document.getElementById('dailyTable').style.display = 'block';
                document.getElementById('summarySection').style.display = 'none';
                document.getElementById('chartsSection').style.display = 'none';
                displayDailyTable(data);
            } else {
                // 週/月/年報表 - 顯示圖表
                document.getElementById('dailyTable').style.display = 'none';
                document.getElementById('summarySection').style.display = 'block';
                document.getElementById('chartsSection').style.display = 'block';
                displayChartReport(data);
            }
        }

        // 🆕 顯示每日表格
        function displayDailyTable(data) {
            const tbody = document.getElementById('dailyTableBody');
            tbody.innerHTML = '';

            const stats = data.statistics;
            const records = data.records;

            // 如果當日有記錄,取第一筆
            const record = records && records.length > 0 ? records[0] : null;

            const rows = [];

            // 血壓
            if (stats.avgSystolicBP !== null && stats.avgDiastolicBP !== null) {
                const isAbnormal = stats.avgSystolicBP > 120 || stats.avgDiastolicBP > 80;
                rows.push({
                    icon: '❤️',
                    name: '血壓',
                    value: `${stats.avgSystolicBP.toFixed(0)} / ${stats.avgDiastolicBP.toFixed(0)} mmHg`,
                    standard: '≤ 120/80 mmHg',
                    status: isAbnormal ? '<span style="color: #dc2626; font-weight: 700;">⚠️ 偏高</span>' : '<span style="color: #16a34a;">✓ 正常</span>',
                    isAbnormal: isAbnormal
                });
            }

            // 血糖
            if (stats.avgBloodSugar !== null) {
                const isAbnormal = stats.avgBloodSugar > 99;
                rows.push({
                    icon: '🩸',
                    name: '血糖',
                    value: `${stats.avgBloodSugar.toFixed(1)} mg/dL`,
                    standard: '≤ 99 mg/dL',
                    status: isAbnormal ? '<span style="color: #dc2626; font-weight: 700;">⚠️ 偏高</span>' : '<span style="color: #16a34a;">✓ 正常</span>',
                    isAbnormal: isAbnormal
                });
            }

            // 飲水量
            if (stats.avgWaterIntake !== null) {
                const isAbnormal = stats.avgWaterIntake < 2000;
                rows.push({
                    icon: '💧',
                    name: '飲水量',
                    value: `${stats.avgWaterIntake.toFixed(0)} ml`,
                    standard: '≥ 2000 ml',
                    status: isAbnormal ? '<span style="color: #dc2626; font-weight: 700;">⚠️ 不足</span>' : '<span style="color: #16a34a;">✓ 充足</span>',
                    isAbnormal: isAbnormal
                });
            }

            // 運動時間
            if (stats.avgExerciseDuration !== null) {
                const isAbnormal = stats.avgExerciseDuration < 30; // 每日建議至少30分鐘
                rows.push({
                    icon: '🏃',
                    name: '運動時間',
                    value: `${stats.avgExerciseDuration.toFixed(1)} 分鐘`,
                    standard: '≥ 30 分鐘',
                    status: isAbnormal ? '<span style="color: #dc2626; font-weight: 700;">⚠️ 不足</span>' : '<span style="color: #16a34a;">✓ 充足</span>',
                    isAbnormal: isAbnormal
                });
            }

            // 抽菸
            if (stats.avgCigarettes !== null && stats.avgCigarettes > 0) {
                const isAbnormal = stats.avgCigarettes > 0;
                rows.push({
                    icon: '🚬',
                    name: '抽菸',
                    value: `${stats.avgCigarettes.toFixed(0)} 支`,
                    standard: '0 支',
                    status: '<span style="color: #dc2626; font-weight: 700;">⚠️ 建議戒菸</span>',
                    isAbnormal: isAbnormal
                });
            }

            // 產生表格行 (數值型資料)
            rows.forEach(row => {
                const tr = document.createElement('tr');
                tr.style.borderBottom = '1px solid #e5e7eb';
                if (row.isAbnormal) {
                    tr.style.background = '#fef2f2';
                }
                
                tr.innerHTML = `
                    <td style="padding: 1rem; border: 1px solid #e5e7eb;">
                        <span style="font-size: 1.2rem; margin-right: 0.5rem;">${row.icon}</span>
                        <strong>${row.name}</strong>
                    </td>
                    <td style="padding: 1rem; text-align: center; border: 1px solid #e5e7eb; font-size: 1.1rem; font-weight: 600; ${row.isAbnormal ? 'color: #dc2626;' : ''}">${row.value}</td>
                    <td style="padding: 1rem; text-align: center; border: 1px solid #e5e7eb; color: #6b7280;">${row.standard}</td>
                    <td style="padding: 1rem; text-align: center; border: 1px solid #e5e7eb;">${row.status}</td>
                `;
                tbody.appendChild(tr);
            });

            // 🆕 三餐記錄 (改用統計方式)
            if (record && (record.meals_Breakfast || record.meals_Lunch || record.meals_Dinner)) {
                const mealTr = document.createElement('tr');
                mealTr.style.borderBottom = '1px solid #e5e7eb';
                mealTr.style.background = '#f9fafb';

                // ✅ 計算三餐總計 (數值加總)
                const calculateMealTotal = (items) => {
                    let total = 0;
                    let others = [];

                    items.forEach(item => {
                        if (!item || item === '0') return;

                        // 處理 "1+1.5" 這種算式
                        if (item.includes('+')) {
                            const parts = item.split('+');
                            parts.forEach(part => {
                                const num = parseFloat(part.trim());
                                if (!isNaN(num)) {
                                    total += num;
                                } else {
                                    others.push(part.trim());
                                }
                            });
                        } else {
                            const num = parseFloat(item);
                            if (!isNaN(num)) {
                                total += num;
                            } else {
                                others.push(item);
                            }
                        }
                    });

                    const result = [];
                    if (total > 0) {
                        result.push(total % 1 === 0 ? total.toString() : total.toFixed(1));
                    }
                    result.push(...others);

                    return result.length > 0 ? result.join(' + ') : null;
                };

                // 收集三餐資料
                let totalVeg = [];
                let totalProtein = [];
                let totalCarbs = [];

                [record.meals_Breakfast, record.meals_Lunch, record.meals_Dinner].forEach(meal => {
                    if (meal) {
                        if (meal.vegetables && meal.vegetables !== '0') totalVeg.push(meal.vegetables);
                        if (meal.protein && meal.protein !== '0') totalProtein.push(meal.protein);
                        if (meal.carbs && meal.carbs !== '0') totalCarbs.push(meal.carbs);
                    }
                });

                // ✅ 計算總和
                const vegTotal = calculateMealTotal(totalVeg);
                const proteinTotal = calculateMealTotal(totalProtein);
                const carbsTotal = calculateMealTotal(totalCarbs);

                let mealContent = '<div style="line-height: 1.8;">';

                if (vegTotal) {
                    mealContent += `<div>🥬 <strong>蔬菜:</strong> ${vegTotal}</div>`;
                }
                if (proteinTotal) {
                    mealContent += `<div>🥩 <strong>蛋白質:</strong> ${proteinTotal}</div>`;
                }
                if (carbsTotal) {
                    mealContent += `<div>🍚 <strong>澱粉:</strong> ${carbsTotal}</div>`;
                }

                mealContent += '</div>';

                mealTr.innerHTML = `
                <td style="padding: 1rem; border: 1px solid #e5e7eb;">
                    <span style="font-size: 1.2rem; margin-right: 0.5rem;">🍽️</span>
                    <strong>今日三餐總計</strong>
                </td>
                <td colspan="3" style="padding: 1rem; border: 1px solid #e5e7eb; text-align: left;">
                    ${mealContent}
                </td>
            `;
                tbody.appendChild(mealTr);
            }

            // 🆕 飲料記錄 (跨欄顯示)
            if (record && record.beverage) {
                const bevTr = document.createElement('tr');
                bevTr.style.borderBottom = '1px solid #e5e7eb';
                bevTr.style.background = '#f9fafb';
                
                bevTr.innerHTML = `
                    <td style="padding: 1rem; border: 1px solid #e5e7eb;">
                        <span style="font-size: 1.2rem; margin-right: 0.5rem;">🥤</span>
                        <strong>其他飲料</strong>
                    </td>
                    <td colspan="3" style="padding: 1rem; border: 1px solid #e5e7eb; text-align: left; font-size: 1.05rem;">
                        ${record.beverage}
                    </td>
                `;
                tbody.appendChild(bevTr);
            }

            // 如果沒有數據
            if (rows.length === 0 && (!record || (!record.meals_Breakfast && !record.meals_Lunch && !record.meals_Dinner && !record.beverage))) {
                tbody.innerHTML = '<tr><td colspan="4" style="padding: 2rem; text-align: center; color: #999;">該日期無健康數據</td></tr>';
            }
        }

        // 顯示圖表報表 (週/月/年)
        function displayChartReport(data) {
            const stats = data.statistics;
            document.getElementById('totalDays').textContent = stats.totalDays;
            document.getElementById('highBPDays').textContent = stats.highBPDays;
            document.getElementById('highBPPercentage').textContent = `(${stats.highBPPercentage.toFixed(1)}%)`;
            document.getElementById('highBSDays').textContent = stats.highBloodSugarDays;
            document.getElementById('highBSPercentage').textContent = `(${stats.highBloodSugarPercentage.toFixed(1)}%)`;
            document.getElementById('lowWaterDays').textContent = stats.lowWaterDays;
            document.getElementById('lowWaterPercentage').textContent = `(${stats.lowWaterPercentage.toFixed(1)}%)`;

            const avgTableHtml = `
                <tr>
                    <td>血壓</td>
                    <td>${stats.avgSystolicBP?.toFixed(1) || 'N/A'} / ${stats.avgDiastolicBP?.toFixed(1) || 'N/A'} mmHg</td>
                    <td>≤ 120/80 mmHg</td>
                    <td>${(stats.avgSystolicBP > 120 || stats.avgDiastolicBP > 80) ? '<span class="badge badge-danger">偏高</span>' : '<span class="badge badge-success">正常</span>'}</td>
                </tr>
                <tr>
                    <td>血糖</td>
                    <td>${stats.avgBloodSugar?.toFixed(1) || 'N/A'} mg/dL</td>
                    <td>≤ 99 mg/dL</td>
                    <td>${stats.avgBloodSugar > 99 ? '<span class="badge badge-danger">偏高</span>' : '<span class="badge badge-success">正常</span>'}</td>
                </tr>
                <tr>
                    <td>飲水量</td>
                    <td>${stats.avgWaterIntake?.toFixed(0) || 'N/A'} ml</td>
                    <td>≥ 2000 ml</td>
                    <td>${stats.avgWaterIntake < 2000 ? '<span class="badge badge-warning">不足</span>' : '<span class="badge badge-success">充足</span>'}</td>
                </tr>
                <tr>
                    <td>運動時間</td>
                    <td>${stats.avgExerciseDuration?.toFixed(1) || 'N/A'} 分鐘</td>
                    <td>≥ 150 分鐘/週</td>
                    <td>${stats.avgExerciseDuration < 150 ? '<span class="badge badge-warning">不足</span>' : '<span class="badge badge-success">充足</span>'}</td>
                </tr>
            `;
            document.getElementById('avgTable').innerHTML = avgTableHtml;

            drawCharts(data.charts);

            // 飲料記錄
            if (data.charts.beverageRecords && data.charts.beverageRecords.length > 0) {
                let beverageHtml = '<table><thead><tr><th>日期</th><th>飲料</th></tr></thead><tbody>';
                data.charts.beverageRecords.forEach(r => {
                    beverageHtml += `<tr><td>${r.date}</td><td>${r.beverage}</td></tr>`;
                });
                beverageHtml += '</tbody></table>';
                document.getElementById('beverageTable').innerHTML = beverageHtml;
            } else {
                document.getElementById('beverageTable').innerHTML = '<p style="text-align:center; padding: 2rem; color: #999;">無記錄</p>';
            }

            // 🆕 三餐記錄 - 改用統計方式顯示
if (data.charts.mealRecords && data.charts.mealRecords.length > 0) {
    let mealHtml = '<table><thead><tr><th>日期</th><th>三餐總計</th></tr></thead><tbody>';
    
    data.charts.mealRecords.forEach(r => {
        // 解析三餐數據
        let totalVeg = [];
        let totalProtein = [];
        let totalCarbs = [];
        
        // 假設 r.meals 包含早午晚餐的資訊
        // 需要從後端傳來已處理好的數據
        if (r.mealData) {
            // 如果後端已經處理好
            const { vegetables, protein, carbs } = r.mealData;
            if (vegetables && vegetables.length > 0) totalVeg = vegetables;
            if (protein && protein.length > 0) totalProtein = protein;
            if (carbs && carbs.length > 0) totalCarbs = carbs;
        }
        
        let mealContent = '<div style="line-height: 1.8; text-align: left;">';
        
        if (totalVeg.length > 0) {
            mealContent += `<div>🥬 <strong>蔬菜:</strong> ${totalVeg.join(' + ')}</div>`;
        }
        if (totalProtein.length > 0) {
            mealContent += `<div>🥩 <strong>蛋白質:</strong> ${totalProtein.join(' + ')}</div>`;
        }
        if (totalCarbs.length > 0) {
            mealContent += `<div>🍚 <strong>澱粉:</strong> ${totalCarbs.join(' + ')}</div>`;
        }
        
        if (totalVeg.length === 0 && totalProtein.length === 0 && totalCarbs.length === 0) {
            mealContent += '<div style="color: #999;">無記錄</div>';
        }
        
        mealContent += '</div>';
        
        mealHtml += `<tr><td>${r.date}</td><td>${mealContent}</td></tr>`;
    });
    
    mealHtml += '</tbody></table>';
    document.getElementById('mealTable').innerHTML = mealHtml;
} else {
    document.getElementById('mealTable').innerHTML = '<p style="text-align:center; padding: 2rem; color: #999;">無記錄</p>';
}
        }

        // 繪製圖表
        function drawCharts(chartData) {
            // 銷毀舊圖表
            Object.values(charts).forEach(chart => chart.destroy());
            charts = {};

            // 血壓圖表
            if (chartData.bloodPressureData && chartData.bloodPressureData.length > 0) {
                const bpCtx = document.getElementById('bpChart').getContext('2d');
                charts.bp = new Chart(bpCtx, {
                    type: 'line',
                    data: {
                        labels: chartData.bloodPressureData.map(d => d.date),
                        datasets: [{
                            label: '收縮壓',
                            data: chartData.bloodPressureData.map(d => d.value),
                            borderColor: 'rgb(54, 162, 235)',
                            backgroundColor: 'rgba(54, 162, 235, 0.1)',
                            tension: 0.1
                        }, {
                            label: '舒張壓',
                            data: chartData.bloodPressureData.map(d => d.value2),
                            borderColor: 'rgb(75, 192, 192)',
                            backgroundColor: 'rgba(75, 192, 192, 0.1)',
                            tension: 0.1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            title: { display: true, text: '血壓趨勢 (標準值: 120/80 mmHg)' }
                        }
                    }
                });
            }

            // 血糖圖表
            if (chartData.bloodSugarData && chartData.bloodSugarData.length > 0) {
                const bsCtx = document.getElementById('bsChart').getContext('2d');
                charts.bs = new Chart(bsCtx, {
                    type: 'line',
                    data: {
                        labels: chartData.bloodSugarData.map(d => d.date),
                        datasets: [{
                            label: '血糖',
                            data: chartData.bloodSugarData.map(d => d.value),
                            borderColor: 'rgb(255, 99, 132)',
                            backgroundColor: 'rgba(255, 99, 132, 0.1)',
                            tension: 0.1,
                            pointBackgroundColor: chartData.bloodSugarData.map(d => d.isAbnormal ? 'red' : 'green')
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            title: { display: true, text: '血糖趨勢 (標準值: ≤99 mg/dL)' }
                        }
                    }
                });
            }

            // 飲水量圖表
            if (chartData.waterIntakeData && chartData.waterIntakeData.length > 0) {
                const waterCtx = document.getElementById('waterChart').getContext('2d');
                charts.water = new Chart(waterCtx, {
                    type: 'bar',
                    data: {
                        labels: chartData.waterIntakeData.map(d => d.date),
                        datasets: [{
                            label: '飲水量 (ml)',
                            data: chartData.waterIntakeData.map(d => d.value),
                            backgroundColor: chartData.waterIntakeData.map(d => d.isAbnormal ? 'rgba(255, 159, 64, 0.5)' : 'rgba(54, 162, 235, 0.5)'),
                            borderColor: chartData.waterIntakeData.map(d => d.isAbnormal ? 'rgb(255, 159, 64)' : 'rgb(54, 162, 235)'),
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            title: { display: true, text: '飲水量趨勢 (建議: ≥2000 ml)' }
                        }
                    }
                });
            }

            // 運動時間圖表
            if (chartData.exerciseDurationData && chartData.exerciseDurationData.length > 0) {
                const exerciseCtx = document.getElementById('exerciseChart').getContext('2d');
                charts.exercise = new Chart(exerciseCtx, {
                    type: 'bar',
                    data: {
                        labels: chartData.exerciseDurationData.map(d => d.date),
                        datasets: [{
                            label: '運動時間 (分鐘)',
                            data: chartData.exerciseDurationData.map(d => d.value),
                            backgroundColor: chartData.exerciseDurationData.map(d => d.isAbnormal ? 'rgba(255, 159, 64, 0.5)' : 'rgba(75, 192, 192, 0.5)'),
                            borderColor: chartData.exerciseDurationData.map(d => d.isAbnormal ? 'rgb(255, 159, 64)' : 'rgb(75, 192, 192)'),
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            title: { display: true, text: '運動時間趨勢 (建議: ≥150 分鐘/週)' }
                        }
                    }
                });
            }
        }

        // 下載 PDF
        function downloadPdf() {
            if (!currentReport) {
                alert('請先查詢報表');
                return;
            }
            alert('下載 PDF 功能開發中...');
            // TODO: 實作 PDF 下載
        }
    </script>
</body>
</html>